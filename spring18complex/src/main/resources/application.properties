
# server setting
server.port=8080

# database setting
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=kh11
spring.datasource.password=kh11

# DBCP(DataBase Connection Pool) 
spring.datasource.dbcp2.max-total=20
spring.datasource.dbcp2.min-idle=0
spring.datasource.dbcp2.max-idle=10
spring.datasource.dbcp2.max-wait-millis=3000

# spring actuator setting
management.endpoints.web.exposure.include=mapping,beans,env

# file upload setting (multipart resolver)
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=10MB

# 404 error setting (처리할 컨트롤러가 없을때 dispatcher servlet이 자체적으로 발생시키는 내부적 오류) + static resource path setting 
spring.mvc.throw-exception-if-no-handler-found=true
# spring.web.resources.add-mappings=false 얘는 리소스까지도 예외처리에 포함시키라는 뜻. 자동을 아예 없애라 라는거 

spring.mvc.static-path-pattern=/static/**
spring.web.resources.static-locations=classpath:/static/

# logging 
logging.level.root=error
logging.level.com.kh=debug
logging.level.member=debug


logging.pattern.console=[%-5level] %msg - %c [%d{yyyy-MM-dd HH:mm:ss.S}] %n


# logging.pattern.file=[%-5level] %msg - %c [%d{yyyy-MM-dd HH:mm:ss.S}] %c - %msg %n
# logging.file.name=logs/daily.log
# logging.level.root=debug 얘는 앵간하면 안씀. 다 나오니까.

# under 10mb not working
# logging.logback.rollingpolicy.max-file-size=15MB
# logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}-%d{yyyy-MM-dd-HH}-%i.log

#mybatis
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.type-aliases-package=com.kh.spring18.dto, com.kh.spring18.vo
mybatis.mapper-locations=/mybatis/mapper/**/*-mapper.xml


# custom setting 
custom.fileupload.path=D:/upload



