@charset "UTF-8";

/*
    commons.css

    이 파일에는 자주 사용하는 작은 화면에 대한 클래스들이 존재한다.
    
    제작일자 : 2023-02-22
    제작자 : 윤형석 

*/

 /*
            모든 홈페이지의 화면은 N줄 1칸 형태라고 생각한다.
            필요한 태그는 외부 div와 내부 div 두 가지이다.

            - div는 기본적으로 폭이 100%이므로 원하는 크기로 변경해야 한다. 

*/
*{
     box-sizing: border-box;
     font-family: '맑은고딕';
}

/* 
            container는 표시될 폭과 정렬방식을 가운데로 설정 
            가운데라고만 하면 너무 애매하므로 다음과 같이 세분화
            1. 내용물을 가운데 정렬한다.
            2. 자신을 가운데 정렬한다. 상하는 놔두고 좌우는 오토로
                -auto는 자동으로 계산해서 가능한 값을 부여하라는 의미 

*/ 
.container-200{
    width: 200px; 
    margin:0 auto 0 auto;   
 }
 .container-300{
    width: 300px; 
    margin:0 auto 0 auto;   
 }
 .container-400{
    width: 400px; 
    margin:0 auto 0 auto;   
 }
 .container-500{
    width: 500px; 
    margin:0 auto 0 auto;   
 }
 .container-600{
    width: 600px; 
    margin:0 auto 0 auto;   
 }
 .container-700{
    width: 700px; 
    margin:0 auto 0 auto;   
 }
 .container-800{
    width: 800px; 
    margin:0 auto 0 auto;   
 }
 .container-900{
    width: 900px; 
    margin:0 auto 0 auto;   
 }
 .container-1000{
    width: 1000px; 
    margin:0 auto;   
 }

 /* row와 row 사이에는 일정한 간격을 부여*/
 .row{
    margin: 10px 0px;
 }

/*
        입력창, 버튼에 관련된 디자인
        .form-input - 입력창
        .form-btn - 버튼
        같은 형태로 쓰기 때문에 색상 등을 제외한 나머지 크기가 동일해야 함.
*/
 .form-input{
    font-size: 16px;
    padding: 0.5em;
    outline: none; /*선택 시 강조 효과 제거*/
    border: 1px solid lightgray;
    border-radius: 0.1em;
 }
 .form-input:focus{ /*커서가 위치했을때*/
    border-color: black;
 }

 .form-btn{
    font-size: 16px;
    padding: 0.5em;
    border-width: 1px;
    border-style: solid;
    border-radius: 0.1em;
    cursor: pointer;

    /* display: point; */
 }
 /* form-btn과 positive가 같이 있으면 */
 .form-btn.positive{
    background-color: #00cec9;
    border-color: #00cec9;
    color: white;
 }
 .form-btn.negative{
    background-color: #d63031;
    border-color: #d63031;
    color: white;
 }
 .form-btn.neutral{
    background-color: #b2bec3;
    border-color: #b2bec3;
    color: white;
 }
 
 .form-btn:hover{
    filter: brightness(110%); /*원래보다 10% 밝게 처리*/
 }
 a.form-btn{
    display: inline-block;
    text-align: center;
    text-decoration: none;
 }

 /* 폭 설정 클래스 */
 .w-100{width:100%;}
 .w-90{width: 90;}
 .w-80{width: 80;}
 .w-70{width: 70;}
 .w-60{width: 60;}
 .w-50{width: 50;}
 .w-40{width: 40;}
 .w-30{width: 30;}
 .w-20{width: 20;}
 .w-10{width: 10;}

 /*내부 요소 정렬 클래스*/
 .center{text-align: center;}
 .left{text-align: left;}
 .right{text-align: right;}

  /*
            외부 여백(margin)을 부여할 수 있도록 설정
            .mt - margin top
            .mb - margin bottom
            .ml - margin left
            .ms - margin start(left)
            .me - margin end(right)
            .mr - margin right

            내부 여백(padding)을 부여할 수 있도록 설정 
            .pt - padding top
            .pb - padding bottom
            .ps - padding start
            .pe - padding end
        */
        .mt-10{margin-top: 10px;}
        .mt-20{margin-top: 20px;}
        .mt-30{margin-top: 30px;}
        .mt-40{margin-top: 40px;}
        .mt-50{margin-top: 50px;}

        .mb-10{margin-bottom: 10px;}
        .mb-20{margin-bottom: 20px;}
        .mb-30{margin-bottom: 30px;}
        .mb-40{margin-bottom: 40px;}
        .mb-50{margin-bottom: 50px;}

        .ms-10{margin-left: 10px;}
        .ms-20{margin-left: 20px;}
        .ms-30{margin-left: 30px;}
        .ms-40{margin-left: 40px;}
        .ms-50{margin-left: 50px;}
        
        .me-5{margin-right: 5px;}
        .me-10{margin-right: 10px;}
        .me-20{margin-right: 20px;}
        .me-30{margin-right: 30px;}
        .me-40{margin-right: 40px;}
        .me-50{margin-right: 50px;}

        .pt-10{padding-top: 10px;}
        .pt-20{padding-top: 20px;}
        .pt-30{padding-top: 30px;}
        .pt-40{padding-top: 40px;}
        .pt-50{padding-top: 50px;}
        
        .pb-10{padding-bottom: 10px;}
        .pb-20{padding-bottom: 20px;}
        .pb-30{padding-bottom: 30px;}
        .pb-40{padding-bottom: 40px;}
        .pb-50{padding-bottom: 50px;}

        .ps-10{padding-right: 10px;}
        .ps-20{padding-right: 20px;}
        .ps-30{padding-right: 30px;}
        .ps-40{padding-right: 40px;}
        .ps-50{padding-right: 50px;}

        .pe-10{padding-left: 10px;}
        .pe-20{padding-left: 20px;}
        .pe-30{padding-left: 30px;}
        .pe-40{padding-left: 40px;}
        .pe-50{padding-left: 50px;}


        /*
            label 디자인
            - label은 inline이 기본이다
            - .form-label은 inline-block으로 변경
        */
        .form-label{
            display: inline-block;
        }
        
        

        /*
        테이블에 border 속성은 더이상 사용하지 않는다(width도 마찬가지)
        
        메인 클래스를 .table로 설정
        서브 클래스를 지정한다.
        - .table-border : 테두리 구현
        */
        
        .table{
            width: 100%;
            border-spacing: 0;
        }
        /* 이렇게 만들면 테이블이 중첩되는 경우 내부 테이블까지 영향을 미침 */
        /* .table th,
        .table td*/
        
        .table > thead > tr > th,
        .table > thead > tr > td,
        .table > tbody > tr > th,
        .table > tbody > tr > td,
        .table > tfoot > tr > th,
        .table > tfoot > tr > td
        {
            padding: 0.5em;
        }
        
        /*         
        table{
            border-collapse: collapse;
            width: 100%;
        }
        table,
        table td, 
        table th{
            border: 1px solid black;
        }
        th, td{
            padding: 0.5em;
        } */
        
        /*
            테이블 부여 서브 스타일
            - 테이블과 칸에 테두리르 부여하고 border-collapse 설정
            */
            .table.table-border {
                border-collapse: collapse;
            }
            
            .table.table-border,
            .table.table-border > thead> tr > th,
            .table.table-border > thead> tr > td,
        .table.table-border > tbody> tr > th,
        .table.table-border > tbody> tr > td,
        .table.table-border > tfoot> tr > th,
        .table.table-border > tfoot> tr > td
        {
            border: 1px solid gray;
        }

        /*
            hover 서브 스타일    
        */
        .table.table-hover > tbody > tr:hover{
            background-color: whitesmoke;
            color: aqua;
            filter: brightness(100%); /*원래보다 10% 밝게 처리*/
         }

         /*
            striped 서브 스타일
            - :first-child는 첫번째 항목
            - :nth-child(1)는 1번째 항목을 의미 
         */
        .table.table-striped > thead > tr,
        .table.table-striped > tfoot > tr,
        .table.table-striped > tbody > tr:nth-child(2n){
            background-color: aliceblue;
            color: aquamarine;
        }

        /*
            slit 테이블 서브스타일  
        */
        .table.table-slit {
            border-collapse: collapse;
            border-top: 4px double black;
            border-bottom: 4px double black;
        }
        .table.table-slit > thead {
            border-bottom: 4px double red;
        }
        .table.table-slit > tfoot{
            border-top: 4px double red;
        }
        /* 마지막 줄은 제외하고 하려면 :not(선택자)를 붙인다.*/
        .table.table-slit > tbody > tr:not(:last-child) {
            border-bottom: 1px solid blue;
        }

        /*
            링크 스타일
        */
        a.link{
         color: black;
         text-decoration: none;
          }
     a.link:hover{
         color: blueviolet;
         }
        
        /*
            페이지네이션(Pagination) 디자인
            - a태그에 폭 설정이 불가능 하므로 display를 변경(inline-block)
            - 활성화 상태를 .on으로 정의하고 :hover 와 동일하게 처리 

            (주의)
            border는 폭, 높이에 영향을 미치므로 추가/제거가 반복될 경우
            투명 테두리를 설정해둬야 한다
            
            대안으로는 그림자(box-shadow)를 사용하는 방법이 있다. 

            box-shadow: x위치 y위치 번짐 퍼짐 색상;

        */
       .pagination{
            text-align: center;
       }
       .pagination > a {
            display: inline-block;
            color: black;
            text-decoration: none;
            font-size: 16px;
            min-width: 3em;
            height: 3em;
            padding: 1em;

            text-align: center;
    
            border: 1px solid transparent;
        }
        .pagination > a.on, 
        .pagination > a:hover{
            border-color: black;
            color: red;
            font-weight: bold;
            /* box-shadow: 2px 2px 2px 2px black; */
        }

        
    /*
            페이지네이션(Pagination) 디자인
            - a태그에 폭 설정이 불가능 하므로 display를 변경(inline-block)
            - 활성화 상태를 .on으로 정의하고 :hover 와 동일하게 처리 

            (주의)
            border는 폭, 높이에 영향을 미치므로 추가/제거가 반복될 경우
            투명 테두리를 설정해둬야 한다
            
            대안으로는 그림자(box-shadow)를 사용하는 방법이 있다. 

            box-shadow: x위치 y위치 번짐 퍼짐 색상;

        */
        .pagination{
         text-align: center;
    }
    .pagination > a {
         display: inline-block;
         color: black;
         text-decoration: none;
         font-size: 16px;
         min-width: 3em;
         height: 3em;
         padding: 1em;

         text-align: center;
 
         border: 1px solid transparent;
     }
     .pagination > a.on, 
     .pagination > a:hover{
         border-color: black;
         color: red;
         font-weight: bold;
         /* box-shadow: 2px 2px 2px 2px black; */
     }    
     .pagination> a.disabled{
      cursor: not-allowed;
   }

         /*
            이미지를 표시하는 방법
            [1] <img> 사용
                - 이미지는 크기 표준화가 어려우니 width, height 속성을 사용한다.
            [2] background-image 사용
        */

        /* 테두리 부여 */
        .image.image-border-hover:hover,
        .image.image-border {
            box-shadow: 0 0 0 1px blue;
        }

        /* 그림자 처리 */
        .image.image-shadow-hover:hover,
        .image.image-shadow{
            box-shadow: 2px 2px 0 0 red;
        }

        /* 둥근/원형 이미지 */
        .image.image-round{
            border-radius: 5px;
        }
        .image.image-circle{
            border-radius: 50%;
        }
        /* 불투명도(opacity) */
        .image.image-blur:hover,
        .image.image-blur.on{
            opacity: 0.5;
        }